<?php
// In form alter
// add custom validation

function selfrating_form_self_rating_node_form_alter(&$form, &$form_state, $form_id){
	dpm($form_state);
	$form['#validate'][] = 'validation_func';
}

// In custom validation function
// check whether time line is valid 
// check user is giving self appraisal once in particular timeline

function validation_func($form, &$form_state) {
	dpm($form_state);
	dpm($form);
	global $user;
	$current_user_timestamp = $user->timestamp;
	$current_user_date = format_date($current_user_timestamp,'custom','d');
	$current_user_month = format_date($current_user_timestamp,'custom','m');


	if($current_user_date > '05' and $current_user_date < '15') {
	 	if($form_state['input']['field_time_line']['und'] != '25') {
	 		form_set_error('field_time_line', t('Please select PERIOD-I.'));
	 	}
 	}


 	if($current_user_date > '20' and $current_user_date <= '31') {
	 	if($form_state['input']['field_time_line']['und'] != '26') {
	 		form_set_error('field_time_line', t('Please select PERIOD-II.'));
	  }
  }




	$query2 = db_select('node', 'n')
	        ->condition('n.uid', $user->uid, '=')
	        ->condition('n.type','self_rating','=')
	        ->fields('n', array('nid', 'type','created'));
	$result2 = $query2->execute();
	$options2 = $result2->fetchAll();

	foreach ($options2 as $key => $value) {
		$nid = $value->nid;
		$timestamp = $value->created;
		$feed = node_load($nid);

		//$mentor_id = field_get_items('node', $feed, 'field_mentor')[0]['target_id'];
		$user_timeline = field_get_items('node', $feed, 'field_time_line')[0]['tid'];

		$user_date = format_date($timestamp ,'custom','d');
		$user_month = format_date($timestamp ,'custom','m');

		global $user;
		$current_user_timestamp = $user->timestamp;
		$current_user_date = format_date($current_user_timestamp,'custom','d');
		$current_user_month = format_date($current_user_timestamp,'custom','m');

	

		
		if($current_user_date > '05' and $current_user_date < '15') {
		 	if($form_state['input']['field_time_line']['und'] != '25') {
		 		form_set_error('field_time_line', t('Please select PERIOD-I.'));
		 	}

		 	else {


				if($form_state['input']['field_time_line']['und'] == $user_timeline and $current_user_month == $user_month) {
  	 		
	  	 		form_set_error('field_time_line', t('This timeline has already been used.'));

				}
  	 	
		 		else{
	 		    continue;
			 	}
			}
		} 	


  	 
  	 	
		if($current_user_date > '20' and $current_user_date <= '31') {
		 	if($form_state['input']['field_time_line']['und'] != '26') {
		 		form_set_error('field_time_line', t('Please select PERIOD-II.'));
		  }

		 	else{

				if($form_state['input']['field_time_line']['und'] == $user_timeline  and $current_user_month == $user_month) {

		  	 		form_set_error('field_time_line', t('This timeline has already been used.'));
				}
  	 		
		 		else{
		 		    continue;
			 	}
			}
		} 	


  	 	




		if(($current_user_date >= '01' and $current_user_date <= '05') || ($current_user_date >= '15' and $current_user_date <= '20')) {

			if($form_state['input']['field_time_line']['und'] == $user_timeline   and $current_user_month == $user_month){
  	 		
	  	 	form_set_error('field_time_line', t('This timeline has already been used.'));
			}

			else if($form_state['input']['field_time_line']['und'] == $user_timeline   and ($current_user_month-1) == $user_month) {

				form_set_error('field_time_line', t('This timeline has already been used.'));
			}

	 		else{
	 		  continue;
	 		}
		}
	}
}
  	 		

  	 	




















